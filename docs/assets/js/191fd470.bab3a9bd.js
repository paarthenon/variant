"use strict";(self.webpackChunkvariant_site=self.webpackChunkvariant_site||[]).push([[8448],{3905:function(a,e,t){t.d(e,{Zo:function(){return m},kt:function(){return k}});var n=t(7294);function r(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function s(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function o(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){r(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function l(a,e){if(null==a)return{};var t,n,r=function(a,e){if(null==a)return{};var t,n,r={},s=Object.keys(a);for(n=0;n<s.length;n++)t=s[n],e.indexOf(t)>=0||(r[t]=a[t]);return r}(a,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(a);for(n=0;n<s.length;n++)t=s[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(r[t]=a[t])}return r}var p=n.createContext({}),i=function(a){var e=n.useContext(p),t=e;return a&&(t="function"==typeof a?a(e):o(o({},e),a)),t},m=function(a){var e=i(a.components);return n.createElement(p.Provider,{value:e},a.children)},c="mdxType",d={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},F=n.forwardRef((function(a,e){var t=a.components,r=a.mdxType,s=a.originalType,p=a.parentName,m=l(a,["components","mdxType","originalType","parentName"]),c=i(t),F=r,k=c["".concat(p,".").concat(F)]||c[F]||d[F]||s;return t?n.createElement(k,o(o({ref:e},m),{},{components:t})):n.createElement(k,o({ref:e},m))}));function k(a,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof a||r){var s=t.length,o=new Array(s);o[0]=F;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=a,l[c]="string"==typeof a?a:r,o[1]=l;for(var i=2;i<s;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}F.displayName="MDXCreateElement"},7685:function(a,e,t){t.r(e),t.d(e,{assets:function(){return m},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return i},toc:function(){return c}});var n=t(3117),r=t(102),s=(t(7294),t(3905)),o=["components"],l={title:"Catalog"},p=void 0,i={unversionedId:"book/catalog",id:"book/catalog",title:"Catalog",description:"A Catalog is a union of literal types. Use a catalog when needing to track which state some element is in, but no additional details. These maps of constants are most often used to store strings, but may also be used with numbers or booleans.",source:"@site/docs/book/catalog.md",sourceDirName:"book",slug:"/book/catalog",permalink:"/variant/docs/next/book/catalog",draft:!1,tags:[],version:"current",frontMatter:{title:"Catalog"},sidebar:"someSidebar",previous:{title:"Matcher",permalink:"/variant/docs/next/book/matcher"},next:{title:"Flags and Matrix",permalink:"/variant/docs/next/book/flags"}},m={},c=[{value:"Numbers",id:"numbers",level:3},{value:"Programmatic values",id:"programmatic-values",level:3},{value:"Matching Catalogs",id:"matching-catalogs",level:3}],d={toc:c},F="wrapper";function k(a){var e=a.components,t=(0,r.Z)(a,o);return(0,s.kt)(F,(0,n.Z)({},d,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"A ",(0,s.kt)("strong",{parentName:"p"},"Catalog")," is a union of literal types. Use a catalog when needing to track which state some element is in, but no additional details. These maps of constants are most often used to store strings, but may also be used with ",(0,s.kt)("inlineCode",{parentName:"p"},"number"),"s or ",(0,s.kt)("inlineCode",{parentName:"p"},"boolean"),"s. "),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const Suit: {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n}',style:{borderBottom:"solid 2px lightgrey"}},"Suit")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Create a catalog object from a set of strings.\n\n(alias) catalog<"Spades" | "Hearts" | "Clubs" | "Diamonds">(strings: ("Spades" | "Hearts" | "Clubs" | "Diamonds")[]): {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n} (+2 overloads)\nimport catalog'},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"(["),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Spades'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Hearts'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Clubs'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Diamonds'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"]);")),(0,s.kt)("div",{parentName:"code",className:"meta-line"},(0,s.kt)("span",{parentName:"div",className:"popover-prefix"},"       "),(0,s.kt)("span",{parentName:"div",className:"popover"},(0,s.kt)("div",{parentName:"span",className:"arrow"}),'const Suit: {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n}')),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"type"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'type Suit = "Spades" | "Hearts" | "Clubs" | "Diamonds"',style:{borderBottom:"solid 2px lightgrey"}},"Suit")," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"keyof"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const Suit: {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n}'},"Suit")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,s.kt)("div",{parentName:"code",className:"meta-line"},(0,s.kt)("span",{parentName:"div",className:"popover-prefix"},"      "),(0,s.kt)("span",{parentName:"div",className:"popover"},(0,s.kt)("div",{parentName:"span",className:"arrow"}),'type Suit = "Spades" | "Hearts" | "Clubs" | "Diamonds"'))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const Suit: {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n}',style:{borderBottom:"solid 2px lightgrey"}},"Suit")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Create a catalog object from a set of strings.\n\n(alias) catalog<"Spades" | "Hearts" | "Clubs" | "Diamonds">(strings: ("Spades" | "Hearts" | "Clubs" | "Diamonds")[]): {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n} (+2 overloads)\nimport catalog'},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"["),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Spades"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Hearts"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Clubs"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Diamonds"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"]"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"meta-line"},(0,s.kt)("span",{parentName:"div",className:"popover-prefix"},"       "),(0,s.kt)("span",{parentName:"div",className:"popover"},(0,s.kt)("div",{parentName:"span",className:"arrow"}),'const Suit: {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n}')),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"type"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'type Suit = "Spades" | "Hearts" | "Clubs" | "Diamonds"',style:{borderBottom:"solid 2px lightgrey"}},"Suit")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"keyof"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const Suit: {\n    Spades: "Spades";\n    Hearts: "Hearts";\n    Clubs: "Clubs";\n    Diamonds: "Diamonds";\n}'},"Suit")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"meta-line"},(0,s.kt)("span",{parentName:"div",className:"popover-prefix"},"      "),(0,s.kt)("span",{parentName:"div",className:"popover"},(0,s.kt)("div",{parentName:"span",className:"arrow"}),'type Suit = "Spades" | "Hearts" | "Clubs" | "Diamonds"')))))),(0,s.kt)("p",null,"In this scenario, catalog is quite similar to the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/basarat/typescript-book/blob/master/docs/types/literal-types.md"},(0,s.kt)("inlineCode",{parentName:"a"},"strEnum"))," function users may be familiar with."),(0,s.kt)("h3",{id:"numbers"},"Numbers"),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const logLevels: {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}"},"logLevels")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"Define the catalog object manually.\n\nUse to enforce a consistent type for all values.\n\n(alias) catalog<{\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}>(catalog: {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}): {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n} (+2 overloads)\nimport catalog"},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"({")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) trace: number"},"trace"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"100"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) debug: number"},"debug"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"200"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) info: number"},"info"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"300"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) warn: number"},"warn"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"400"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) error: number"},"error"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"500"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) fatal: number"},"fatal"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"600"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"})"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const logLevels: {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}"},"logLevels")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"Define the catalog object manually.\n\nUse to enforce a consistent type for all values.\n\n(alias) catalog<{\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}>(catalog: {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}): {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n} (+2 overloads)\nimport catalog"},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) trace: number"},"trace"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"100"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) debug: number"},"debug"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"200"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) info: number"},"info"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"300"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) warn: number"},"warn"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"400"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) error: number"},"error"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"500"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) fatal: number"},"fatal"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"600"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")")))))),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"catalog()")," will enforce that all values are of the same type, ensuring that a stray ",(0,s.kt)("inlineCode",{parentName:"p"},"'600'")," will raise an error."),(0,s.kt)("h3",{id:"programmatic-values"},"Programmatic values"),(0,s.kt)("p",null,"The values of the literals can be defined programmatiocally. For example, the ",(0,s.kt)("inlineCode",{parentName:"p"},"logLevels")," values follow a strict formula\u2014the index times ",(0,s.kt)("inlineCode",{parentName:"p"},"100"),". Catalog allows us to express this programmatically."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const logLevels: {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}"},"logLevels")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Create a catalog object based on some calculation\n\n(alias) catalog<"trace" | "debug" | "info" | "warn" | "error" | "fatal", (_: "trace" | "debug" | "info" | "warn" | "error" | "fatal", i: number) => number>(strings: ("trace" | "debug" | "info" | "warn" | "error" | "fatal")[], factory: (_: "trace" | "debug" | "info" | "warn" | "error" | "fatal", i: number) => number): {\n    ...;\n} (+2 overloads)\nimport catalog'},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"(")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"   ["),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'trace'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'debug'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'info'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'warn'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'error'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'fatal'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"],")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"   ("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: "trace" | "debug" | "info" | "warn" | "error" | "fatal"'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) i: number"},"i")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},") "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) i: number"},"i")),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"+"),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"1"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},") "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"*"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"100")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const logLevels: {\n    trace: number;\n    debug: number;\n    info: number;\n    warn: number;\n    error: number;\n    fatal: number;\n}"},"logLevels")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Create a catalog object based on some calculation\n\n(alias) catalog<"trace" | "debug" | "info" | "warn" | "error" | "fatal", (_: "trace" | "debug" | "info" | "warn" | "error" | "fatal", i: number) => number>(strings: ("trace" | "debug" | "info" | "warn" | "error" | "fatal")[], factory: (_: "trace" | "debug" | "info" | "warn" | "error" | "fatal", i: number) => number): {\n    ...;\n} (+2 overloads)\nimport catalog'},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"   ["),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"trace"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"debug"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"info"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"warn"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"error"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"fatal"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"],")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"   "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) _: "trace" | "debug" | "info" | "warn" | "error" | "fatal"'},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) i: number"},"i")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) i: number"},"i")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"+"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"1)"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"*"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"100")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,s.kt)("p",null,"This version of the code can be shorter and is often more resilient against refactoring."),(0,s.kt)("h3",{id:"matching-catalogs"},"Matching Catalogs"),(0,s.kt)("p",null,"In order to streamline domain-modeling, literal unions (such as those from ",(0,s.kt)("inlineCode",{parentName:"p"},"catalog()"),") may be directly processed through ",(0,s.kt)("inlineCode",{parentName:"p"},"match()")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"matcher()"),"."),(0,s.kt)("div",{className:"shiki-twoslash-fragment"},(0,s.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const animal: {\n    cat: "cat";\n    dog: "dog";\n    snake: "snake";\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Create a catalog object from a set of strings.\n\n(alias) catalog<"cat" | "dog" | "snake">(strings: ("cat" | "dog" | "snake")[]): {\n    cat: "cat";\n    dog: "dog";\n    snake: "snake";\n} (+2 overloads)\nimport catalog'},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"(["),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'cat'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'dog'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'snake'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"]);")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"type"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'type animal = "cat" | "dog" | "snake"'},"animal")," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"keyof"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const animal: {\n    cat: "cat";\n    dog: "dog";\n    snake: "snake";\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"const fittingPokemon: (a: animal) => any"},"fittingPokemon")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) a: "cat" | "dog" | "snake"'},"a")),(0,s.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'type animal = "cat" | "dog" | "snake"'},"animal"),") "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'Match an instance of a variant or literal union against its possible cases.\n\n(alias) match<Record<"type", "cat" | "dog" | "snake">, {\n    cat: (_: never) => string;\n    dog: (_: never) => string;\n    snake: (_: never) => string;\n}, "cat" | "dog" | "snake">(target: "cat" | "dog" | "snake" | Record<...>, handler: {\n    cat: (_: never) => string;\n    dog: (_: never) => string;\n    snake: (_: never) => string;\n} | ((t: Record<...>) => {\n    cat: (_: never) => string;\n    dog: (_: never) => string;\n    snake: (_: never) => string;\n})): any (+3 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) a: "cat" | "dog" | "snake"'},"a")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", { ")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) cat: (_: never) => string"},"cat")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) _: never"},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Meowth'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) dog: (_: never) => string"},"dog")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) _: never"},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Arcanine'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,s.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) snake: (_: never) => string"},"snake")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) _: never"},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Ekans'"),(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"})"))))),(0,s.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,s.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,s.kt)("div",{parentName:"pre",className:"code-container"},(0,s.kt)("code",{parentName:"div"},(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const animal: {\n    cat: "cat";\n    dog: "dog";\n    snake: "snake";\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Create a catalog object from a set of strings.\n\n(alias) catalog<"cat" | "dog" | "snake">(strings: ("cat" | "dog" | "snake")[]): {\n    cat: "cat";\n    dog: "dog";\n    snake: "snake";\n} (+2 overloads)\nimport catalog'},"catalog")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"["),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"cat"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"dog"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"snake"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"]"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"type"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'type animal = "cat" | "dog" | "snake"'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"keyof"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'const animal: {\n    cat: "cat";\n    dog: "dog";\n    snake: "snake";\n}'},"animal")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,s.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"const fittingPokemon: (a: animal) => any"},"fittingPokemon")," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) a: "cat" | "dog" | "snake"'},"a")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'type animal = "cat" | "dog" | "snake"'},"animal"),")"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,s.kt)("data-lsp",{parentName:"span",lsp:'Match an instance of a variant or literal union against its possible cases.\n\n(alias) match<Record<"type", "cat" | "dog" | "snake">, {\n    cat: (_: never) => string;\n    dog: (_: never) => string;\n    snake: (_: never) => string;\n}, "cat" | "dog" | "snake">(target: "cat" | "dog" | "snake" | Record<...>, handler: {\n    cat: (_: never) => string;\n    dog: (_: never) => string;\n    snake: (_: never) => string;\n} | ((t: Record<...>) => {\n    cat: (_: never) => string;\n    dog: (_: never) => string;\n    snake: (_: never) => string;\n})): any (+3 overloads)\nimport match'},"match")),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:'(parameter) a: "cat" | "dog" | "snake"'},"a")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", { ")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) cat: (_: never) => string"},"cat"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) _: never"},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Meowth"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) dog: (_: never) => string"},"dog"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) _: never"},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Arcanine"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,s.kt)("data-lsp",{parentName:"span",lsp:"(property) snake: (_: never) => string"},"snake"),": "),(0,s.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,s.kt)("data-lsp",{parentName:"span",lsp:"(parameter) _: never"},"_")),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Ekans"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,s.kt)("div",{parentName:"code",className:"line"},(0,s.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,s.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")")))))),(0,s.kt)("p",null,"Other library functions can be accessed by elevating the literal union to a full discriminated union through ",(0,s.kt)("inlineCode",{parentName:"p"},"ofLiteral()"),"."))}k.isMDXComponent=!0}}]);