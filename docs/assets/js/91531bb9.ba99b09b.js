"use strict";(self.webpackChunkvariant_site=self.webpackChunkvariant_site||[]).push([[8857],{3905:function(e,a,t){t.d(a,{Zo:function(){return m},kt:function(){return y}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?p(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)t=p[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),i=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=i(e.components);return n.createElement(l.Provider,{value:a},e.children)},d="mdxType",F={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=i(t),c=r,y=d["".concat(l,".").concat(c)]||d[c]||F[c]||p;return t?n.createElement(y,o(o({ref:a},m),{},{components:t})):n.createElement(y,o({ref:a},m))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var p=t.length,o=new Array(p);o[0]=c;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var i=2;i<p;i++)o[i]=t[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5702:function(e,a,t){t.r(a),t.d(a,{assets:function(){return m},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return d}});var n=t(3117),r=t(102),p=(t(7294),t(3905)),o=["components"],s={title:"Generic Variants"},l=void 0,i={unversionedId:"book/generic",id:"book/generic",title:"Generic Variants",description:"Use the onTerms helper function to create generic variants. Let's create the classic Option type, with Some, which contains data, and None, which doesn't. Some of you know it as Maybe, with Just and Nothing instead. These are an excellent alternative to null handling, which has been referred to by its creator as his billion dollar mistake.",source:"@site/docs/book/generic.md",sourceDirName:"book",slug:"/book/generic",permalink:"/variant/docs/next/book/generic",draft:!1,tags:[],version:"current",frontMatter:{title:"Generic Variants"},sidebar:"someSidebar",previous:{title:"Recursive Variants",permalink:"/variant/docs/next/book/recursive"},next:{title:"Augmented Variants",permalink:"/variant/docs/next/book/augment"}},m={},d=[{value:"How does it work?",id:"how-does-it-work",level:3},{value:"Tree&lt;T&gt;",id:"treet",level:4}],F={toc:d},c="wrapper";function y(e){var a=e.components,t=(0,r.Z)(e,o);return(0,p.kt)(c,(0,n.Z)({},F,t,{components:a,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"Use the ",(0,p.kt)("inlineCode",{parentName:"p"},"onTerms")," helper function to create generic variants. Let's create the classic ",(0,p.kt)("strong",{parentName:"p"},"Option")," type, with ",(0,p.kt)("inlineCode",{parentName:"p"},"Some"),", which contains data, and ",(0,p.kt)("inlineCode",{parentName:"p"},"None"),", which doesn't. Some of you know it as ",(0,p.kt)("strong",{parentName:"p"},"Maybe"),", with ",(0,p.kt)("inlineCode",{parentName:"p"},"Just")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"Nothing")," instead. These are an excellent alternative to null handling, which has been referred to by its creator as his ",(0,p.kt)("a",{parentName:"p",href:"https://www.infoq.com/presentations/Null-References-The-Billion-Dollar-Mistake-Tony-Hoare/"},"billion dollar mistake"),"."),(0,p.kt)("div",{className:"shiki-twoslash-fragment"}),(0,p.kt)("div",{className:"shiki-twoslash-fragment"},(0,p.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const variant: {\n    <VM extends RawVariant>(template: GenericTemplate<VM>): Identity<GenericVariantRecord<VM, "type">>;\n    <VM_1 extends RawVariant>(template: VM_1): Identity<...>;\n    <T extends string | VariantCreator<...>>(template: T[]): Identity<...>;\n}\nimport variant'},"variant")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Define a generic variant\n\n(alias) function onTerms<T extends RawVariant>(func: (alpha: Alpha) => T): GenericTemplate<T>\nimport onTerms"},"onTerms")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Take a single variable of type T and store as 'payload'\n\n(alias) function payload<T>(_example?: T): (payload: T) => {\n    payload: T;\n}\nimport payload"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create an empty variation (`{type: 'literal'}`).\n\n(alias) const nil: () => {}\nimport nil"},"nil")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Get the literal union for a variant type's names, plus `undefined`.\n\n(alias) type TypeNames<T extends VariantModule<string>> = TypesOf<T> | undefined\nimport TypeNames"},"TypeNames")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Generic Variant Of.\n\n(alias) type GVariantOf<VM extends GenericVariantRecord<{}, string>, TType extends TypeNames<VM>, Map extends { [gp: string]: any; }> = TType extends keyof VM ? Generify<GenericVariantTypeSpread<VM>[TType], Map> : Generify<GenericVariantTypeSpread<VM>[keyof VM], Map>\nimport GVariantOf"},"GVariantOf")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"} "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'variant'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) variant<{\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}>(template: GenericTemplate<{\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}>): {\n    ...;\n} (+2 overloads)\nimport variant'},"variant")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'Define a generic variant\n\n(alias) onTerms<{\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}>(func: (alpha: Alpha) => {\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}): GenericTemplate<...>\nimport onTerms'},"onTerms")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"(({"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) T: GenericTerm<"T">'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ({")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}'},"Some"),": "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'Take a single variable of type T and store as \'payload\'\n\n(alias) payload<GenericTerm<"T">>(_example?: GenericTerm<"T"> | undefined): (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}\nimport payload'},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) T: GenericTerm<"T">'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) None: () => {}"},"None"),": "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create an empty variation (`{type: 'literal'}`).\n\n(alias) const nil: () => {}\nimport nil"},"nil")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"})));")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"type"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}'},"Option"),"<",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"T"),", ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) TType in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"TType")," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"extends"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"Get the literal union for a variant type's names, plus `undefined`.\n\n(alias) type TypeNames<T extends VariantModule<string>> = TypesOf<T> | undefined\nimport TypeNames"},"TypeNames"),"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"> "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"undefined"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},">")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"Generic Variant Of.\n\n(alias) type GVariantOf<VM extends GenericVariantRecord<{}, string>, TType extends TypeNames<VM>, Map extends { [gp: string]: any; }> = TType extends keyof VM ? Generify<GenericVariantTypeSpread<VM>[TType], Map> : Generify<GenericVariantTypeSpread<VM>[keyof VM], Map>\nimport GVariantOf"},"GVariantOf"),"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) TType in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"TType"),", {",(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) T: T"},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"T"),"}>;"))))),(0,p.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const variant: {\n    <VM extends RawVariant>(template: GenericTemplate<VM>): Identity<GenericVariantRecord<VM, "type">>;\n    <VM_1 extends RawVariant>(template: VM_1): Identity<...>;\n    <T extends string | VariantCreator<...>>(template: T[]): Identity<...>;\n}\nimport variant'},"variant")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Define a generic variant\n\n(alias) function onTerms<T extends RawVariant>(func: (alpha: Alpha) => T): GenericTemplate<T>\nimport onTerms"},"onTerms")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Take a single variable of type T and store as 'payload'\n\n(alias) function payload<T>(_example?: T): (payload: T) => {\n    payload: T;\n}\nimport payload"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create an empty variation (`{type: 'literal'}`).\n\n(alias) const nil: () => {}\nimport nil"},"nil")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Get the literal union for a variant type's names, plus `undefined`.\n\n(alias) type TypeNames<T extends VariantModule<string>> = TypesOf<T> | undefined\nimport TypeNames"},"TypeNames")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Generic Variant Of.\n\n(alias) type GVariantOf<VM extends GenericVariantRecord<{}, string>, TType extends TypeNames<VM>, Map extends { [gp: string]: any; }> = TType extends keyof VM ? Generify<GenericVariantTypeSpread<VM>[TType], Map> : Generify<GenericVariantTypeSpread<VM>[keyof VM], Map>\nimport GVariantOf"},"GVariantOf")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"variant"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) variant<{\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}>(template: GenericTemplate<{\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}>): {\n    ...;\n} (+2 overloads)\nimport variant'},"variant")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'Define a generic variant\n\n(alias) onTerms<{\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}>(func: (alpha: Alpha) => {\n    Some: (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    };\n    None: () => {};\n}): GenericTemplate<...>\nimport onTerms'},"onTerms")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(({"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) T: GenericTerm<"T">'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}'},"Some"),": ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'Take a single variable of type T and store as \'payload\'\n\n(alias) payload<GenericTerm<"T">>(_example?: GenericTerm<"T"> | undefined): (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}\nimport payload'},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) T: GenericTerm<"T">'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) None: () => {}"},"None"),": "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create an empty variation (`{type: 'literal'}`).\n\n(alias) const nil: () => {}\nimport nil"},"nil")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")))"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"type"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) TType in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"TType")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"extends"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Get the literal union for a variant type's names, plus `undefined`.\n\n(alias) type TypeNames<T extends VariantModule<string>> = TypesOf<T> | undefined\nimport TypeNames"},"TypeNames")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"undefined>")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Generic Variant Of.\n\n(alias) type GVariantOf<VM extends GenericVariantRecord<{}, string>, TType extends TypeNames<VM>, Map extends { [gp: string]: any; }> = TType extends keyof VM ? Generify<GenericVariantTypeSpread<VM>[TType], Map> : Generify<GenericVariantTypeSpread<VM>[keyof VM], Map>\nimport GVariantOf"},"GVariantOf")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<"None", () => {}, "type">;\n}'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) TType in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"TType")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) T: T"},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined>'},"T"),"}>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,p.kt)("p",null,"Here's the type in action."),(0,p.kt)("div",{className:"shiki-twoslash-fragment"},(0,p.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\n(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"} "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'./option'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const num: {\n    type: "Some";\n    payload: number;\n}'},"num")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: <number>(payload: number) => {\n    type: "Some";\n    payload: number;\n}'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"4"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const str: {\n    type: "Some";\n    payload: string;\n}',style:{borderBottom:"solid 2px lightgrey"}},"str")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: <string>(payload: string) => {\n    type: "Some";\n    payload: string;\n}'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'thing'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"meta-line"},(0,p.kt)("span",{parentName:"div",className:"popover-prefix"},"      "),(0,p.kt)("span",{parentName:"div",className:"popover"},(0,p.kt)("div",{parentName:"span",className:"arrow"}),'const str: {\n    type: "Some";\n    payload: string;\n}'))))),(0,p.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\n(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"./option"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const num: {\n    type: "Some";\n    payload: number;\n}'},"num")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: <number>(payload: number) => {\n    type: "Some";\n    payload: number;\n}'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(4)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const str: {\n    type: "Some";\n    payload: string;\n}',style:{borderBottom:"solid 2px lightgrey"}},"str")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: <string>(payload: string) => {\n    type: "Some";\n    payload: string;\n}'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"thing"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"meta-line"},(0,p.kt)("span",{parentName:"div",className:"popover-prefix"},"      "),(0,p.kt)("span",{parentName:"div",className:"popover"},(0,p.kt)("div",{parentName:"span",className:"arrow"}),'const str: {\n    type: "Some";\n    payload: string;\n}')))))),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"Option.Some")," function is parameterized, meaning that it will infer its return value from whatever is passed in. Here, ",(0,p.kt)("inlineCode",{parentName:"p"},"num")," has is one case of ",(0,p.kt)("inlineCode",{parentName:"p"},"Option<number>"),", while ",(0,p.kt)("inlineCode",{parentName:"p"},"str")," is one of ",(0,p.kt)("inlineCode",{parentName:"p"},"Option<string>"),". More complex types may also be stored, and generic functions can be written to process arbitrary types."),(0,p.kt)("div",{className:"shiki-twoslash-fragment"},(0,p.kt)("pre",{parentName:"div",className:"shiki comrade-contrast twoslash lsp",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create a function that returns a value after being called.\n\n(alias) function constant<T>(x: T): () => T\nimport constant"},"constant")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const isType: {\n    <T extends string | VariantCreator<string, Func, "type">>(type: T): <O extends Record<"type", string>>(object: O) => object is Extract<O, Record<"type", TypeStr<T, "type">>>;\n    <O_1 extends Record<...>, T_1 extends O_1["type"] | VariantCreator<...>>(object: O_1 | ... 1 more ... | undefined, type: T_1): object is Extract<...>;\n}\nimport isType'},"isType")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const match: MatchOverloads<"type">\nimport match'},"match")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"} "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'variant'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\n(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"} "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'./option'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const extract: <T>(option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}) => T | undefined'},"extract")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," <",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in <T>(option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}): T | undefined'},"T"),"> ("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}'},"option")),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\nimport Option'},"Option"),"<",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in <T>(option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}): T | undefined'},"T"),">) "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'Match an instance of a variant or literal union against its possible cases.\n\n(alias) match<{\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}, {\n    Some: ({ payload }: {\n        type: "Some";\n        payload: T;\n    }) => T;\n    None: () => undefined;\n}, string>(target: string | {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}, handler: {\n    Some: ({ payload }: {\n        type: "Some";\n        payload: T;\n    }) => T;\n    None: () => undefined;\n} | ((t: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}) => {\n    Some: ({ payload }: {\n        type: "Some";\n        payload: T;\n    }) => T;\n    None: () => undefined;\n})): T | undefined (+3 overloads)\nimport match'},"match")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}'},"option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: ({ payload }: {\n    type: "Some";\n    payload: T;\n}) => T'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"(parameter) payload: T"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"(parameter) payload: T"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) None: () => undefined"},"None"),": "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create a function that returns a value after being called.\n\n(alias) constant<undefined>(x: undefined): () => undefined\nimport constant"},"constant")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"var undefined"},"undefined")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"});")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"const probablyFour: number | undefined",style:{borderBottom:"solid 2px lightgrey"}},"probablyFour")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'const extract: <number>(option: {\n    type: "Some";\n    payload: number;\n} | {\n    type: "None";\n}) => number | undefined'},"extract")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: <number>(payload: number) => {\n    type: "Some";\n    payload: number;\n}'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"4"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"));")),(0,p.kt)("div",{parentName:"code",className:"meta-line"},(0,p.kt)("span",{parentName:"div",className:"popover-prefix"},"           "),(0,p.kt)("span",{parentName:"div",className:"popover"},(0,p.kt)("div",{parentName:"span",className:"arrow"}),"const probablyFour: number | undefined")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"function"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"function returnSomes<T>(options: Option<T>[]): T[]"},"returnSomes")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"<",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in returnSomes<T>(options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]): T[]'},"T"),">("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]'},"options")),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\nimport Option'},"Option"),"<",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in returnSomes<T>(options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]): T[]'},"T"),">[]) {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]'},"options"))),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        ."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'Returns the elements of an array that meet the condition specified in a callback function.\n\n(method) Array<{ type: "Some"; payload: T; } | { type: "None"; }>.filter<{\n    type: "Some";\n    payload: T;\n}>(predicate: (value: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}, index: number, array: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]) => value is {\n    type: "Some";\n    payload: T;\n}, thisArg?: any): {\n    type: "Some";\n    payload: T;\n}[] (+1 overload)'},"filter")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) isType<GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}, "type">>(type: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}, "type">): <O>(object: O) => object is Extract<...> (+1 overload)\nimport isType'},"isType")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}, "type">'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"))")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        ."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'Calls a defined callback function on each element of an array, and returns an array that contains the results.\n\n(method) Array<{ type: "Some"; payload: T; }>.map<T>(callbackfn: (value: {\n    type: "Some";\n    payload: T;\n}, index: number, array: {\n    type: "Some";\n    payload: T;\n}[]) => T, thisArg?: any): T[]'},"map")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) some: {\n    type: "Some";\n    payload: T;\n}'},"some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) some: {\n    type: "Some";\n    payload: T;\n}'},"some")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) payload: T"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}"))))),(0,p.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme twoslash lsp",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create a function that returns a value after being called.\n\n(alias) function constant<T>(x: T): () => T\nimport constant"},"constant")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const isType: {\n    <T extends string | VariantCreator<string, Func, "type">>(type: T): <O extends Record<"type", string>>(object: O) => object is Extract<O, Record<"type", TypeStr<T, "type">>>;\n    <O_1 extends Record<...>, T_1 extends O_1["type"] | VariantCreator<...>>(object: O_1 | ... 1 more ... | undefined, type: T_1): object is Extract<...>;\n}\nimport isType'},"isType")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const match: MatchOverloads<"type">\nimport match'},"match")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"variant"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"import"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\n(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"from"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"./option"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'const extract: <T>(option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}) => T | undefined'},"extract")," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in <T>(option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}): T | undefined'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}'},"option")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\nimport Option'},"Option"),"<",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in <T>(option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}): T | undefined'},"T"),">)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'Match an instance of a variant or literal union against its possible cases.\n\n(alias) match<{\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}, {\n    Some: ({ payload }: {\n        type: "Some";\n        payload: T;\n    }) => T;\n    None: () => undefined;\n}, string>(target: string | {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}, handler: {\n    Some: ({ payload }: {\n        type: "Some";\n        payload: T;\n    }) => T;\n    None: () => undefined;\n} | ((t: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}) => {\n    Some: ({ payload }: {\n        type: "Some";\n        payload: T;\n    }) => T;\n    None: () => undefined;\n})): T | undefined (+3 overloads)\nimport match'},"match")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) option: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}'},"option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: ({ payload }: {\n    type: "Some";\n    payload: T;\n}) => T'},"Some"),": "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"(parameter) payload: T"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"(parameter) payload: T"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) None: () => undefined"},"None"),": ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"Create a function that returns a value after being called.\n\n(alias) constant<undefined>(x: undefined): () => undefined\nimport constant"},"constant")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(",(0,p.kt)("data-lsp",{parentName:"span",lsp:"var undefined"},"undefined"),")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},"\xa0"),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:"const probablyFour: number | undefined",style:{borderBottom:"solid 2px lightgrey"}},"probablyFour")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:'const extract: <number>(option: {\n    type: "Some";\n    payload: number;\n} | {\n    type: "None";\n}) => number | undefined'},"extract")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: <number>(payload: number) => {\n    type: "Some";\n    payload: number;\n}'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(4))"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"meta-line"},(0,p.kt)("span",{parentName:"div",className:"popover-prefix"},"           "),(0,p.kt)("span",{parentName:"div",className:"popover"},(0,p.kt)("div",{parentName:"span",className:"arrow"}),"const probablyFour: number | undefined")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"export"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"function"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ",(0,p.kt)("data-lsp",{parentName:"span",lsp:"function returnSomes<T>(options: Option<T>[]): T[]"},"returnSomes")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in returnSomes<T>(options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]): T[]'},"T")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]'},"options")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) type Option<T, TType extends TypeNames<{ Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => { payload: GenericTerm<"T">; }, "type">; None: GenericVariantCreator<"None", () => {}, "type">; }> = undefined> = TType extends "Some" | "None" ? Generify<GenericVariantTypeSpread<{\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}>[TType], {\n    ...;\n}> : {\n    ...;\n} | {\n    ...;\n}\nimport Option'},"Option"),"<",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(type parameter) T in returnSomes<T>(options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]): T[]'},"T"),">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"[]"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) options: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]'},"options"))),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        .",(0,p.kt)("data-lsp",{parentName:"span",lsp:'Returns the elements of an array that meet the condition specified in a callback function.\n\n(method) Array<{ type: "Some"; payload: T; } | { type: "None"; }>.filter<{\n    type: "Some";\n    payload: T;\n}>(predicate: (value: {\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n}, index: number, array: ({\n    type: "Some";\n    payload: T;\n} | {\n    type: "None";\n})[]) => value is {\n    type: "Some";\n    payload: T;\n}, thisArg?: any): {\n    type: "Some";\n    payload: T;\n}[] (+1 overload)'},"filter")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) isType<GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}, "type">>(type: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}, "type">): <O>(object: O) => object is Extract<...> (+1 overload)\nimport isType'},"isType")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(alias) const Option: {\n    Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n        payload: GenericTerm<"T">;\n    }, "type">;\n    None: GenericVariantCreator<...>;\n}\nimport Option'},"Option")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".",(0,p.kt)("data-lsp",{parentName:"span",lsp:'(property) Some: GenericVariantCreator<"Some", (payload: GenericTerm<"T">) => {\n    payload: GenericTerm<"T">;\n}, "type">'},"Some")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"))")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        .",(0,p.kt)("data-lsp",{parentName:"span",lsp:'Calls a defined callback function on each element of an array, and returns an array that contains the results.\n\n(method) Array<{ type: "Some"; payload: T; }>.map<T>(callbackfn: (value: {\n    type: "Some";\n    payload: T;\n}, index: number, array: {\n    type: "Some";\n    payload: T;\n}[]) => T, thisArg?: any): T[]'},"map")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) some: {\n    type: "Some";\n    payload: T;\n}'},"some")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},(0,p.kt)("data-lsp",{parentName:"span",lsp:'(parameter) some: {\n    type: "Some";\n    payload: T;\n}'},"some")),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".",(0,p.kt)("data-lsp",{parentName:"span",lsp:"(property) payload: T"},"payload")),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}")))))),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"returnSomes")," function has been correctly typed as returning ",(0,p.kt)("inlineCode",{parentName:"p"},"T[]")," without our explicitly saying so."),(0,p.kt)("h3",{id:"how-does-it-work"},"How does it work?"),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"T")," property of the parameter is a placeholder - an instance of a variant meant to represent a generic term. The object that we destructured to get ",(0,p.kt)("inlineCode",{parentName:"p"},"T")," has a placeholder for each letter of the roman alphabet, 26 in total. ",(0,p.kt)("inlineCode",{parentName:"p"},"onTerms()")," brands the return type of the template function with a symbol to indicate the template has generic term placeholders. When this symbol is present, a special overload of ",(0,p.kt)("inlineCode",{parentName:"p"},"variant()")," is triggered which will rewrite the ",(0,p.kt)("inlineCode",{parentName:"p"},"T")," placeholder with an actualized generic type."),(0,p.kt)("hr",null),(0,p.kt)("p",null,"Upcoming: Incorporate tree example properly. "),(0,p.kt)("h4",{id:"treet"},"Tree<T",">"),(0,p.kt)("p",null,"Trees will need to be defined type-first like all recursive variants. "),(0,p.kt)("div",{className:"shiki-twoslash-fragment"},(0,p.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"variant"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"onTerms"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"(({"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"type"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<T> "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"=")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"|"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Variant<"),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Branch'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," T, left"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<T>, right"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<T>}>")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"|"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Variant<"),(0,p.kt)("span",{parentName:"div",style:{color:"#63A5A5"}},"'Leaf'"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," T}>")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    ;")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        Branch: "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"fields"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"<{left"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},">, right"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},">, payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}>(),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        Leaf: "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    }")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}));")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"type"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<T, TType "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"extends"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," TypeNames<"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"> "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"undefined"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"> ")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," GVariantOf<"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", TType, {T"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," T}>;"))))),(0,p.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," variant"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"onTerms"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(({"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"type"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"|"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Variant"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Branch"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"left"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Tree<T>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"right"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Tree<T>}>")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"|"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Variant"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"'"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"T}>")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    ;")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        Branch: fields"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"left"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Tree<"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"right"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Tree<"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">()"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        Leaf: payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    }")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}))"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"type"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"TType"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"extends"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"TypeNames"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"undefined>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"GVariantOf"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"typeof"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"TType"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"T}>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))),(0,p.kt)("p",null,"but otherwise follow the same process. "),(0,p.kt)("div",{className:"shiki-twoslash-fragment"},(0,p.kt)("pre",{parentName:"div",className:"shiki comrade-contrast",style:{backgroundColor:"rgb(26, 32, 32)",color:"#d6dbdb"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"}),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"binTree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Branch"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"({")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    payload: "),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"1"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    left: "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Branch"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"({")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        payload: "),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"2"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        left: "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"4"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        right: "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"5"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    }),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    right: "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"3"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"),")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"})")),(0,p.kt)("div",{parentName:"code",className:"line"}),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"function"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"<T>("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"node"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," Tree<T>)"),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," T[] {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"match"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"node"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ["),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"],")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"Branch"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},": ({"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"left"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"right"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}) "),(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"            "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ["),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"..."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"left"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"), "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"..."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"right"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")];")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"        }")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"    })")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"}")),(0,p.kt)("div",{parentName:"code",className:"line"}),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#C24E4B"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," ["),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d1"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d2"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d3"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d4"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d5"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"] "),(0,p.kt)("span",{parentName:"div",style:{color:"#9BB7A7"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"binTree"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d1"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"1"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d2"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"2"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d3"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"4"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d4"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"5"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"d5"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},")."),(0,p.kt)("span",{parentName:"div",style:{color:"#F9F7F1"}},"toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#4EADAD"}},"3"),(0,p.kt)("span",{parentName:"div",style:{color:"#D6DBDB"}},");"))))),(0,p.kt)("pre",{parentName:"div",className:"shiki Monotone-red-color-theme",style:{backgroundColor:"#000000",color:"#ffffff"}},(0,p.kt)("div",{parentName:"pre",className:"language-id"},"ts"),(0,p.kt)("div",{parentName:"pre",className:"code-container"},(0,p.kt)("code",{parentName:"div"},(0,p.kt)("div",{parentName:"code",className:"line"}),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"binTree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".Branch"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    payload: "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"1"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    left: "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".Branch"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"{")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        payload: "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"2"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        left: "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(4)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        right: "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(5)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    }"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    right: "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"Tree"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".Leaf"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(3)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},",")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"}"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")")),(0,p.kt)("div",{parentName:"code",className:"line"}),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"function"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"<"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},">("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"node"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"Tree<T>)"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},":"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"T"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"[] "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"{")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," match"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"node"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        Leaf: "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ["),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"],")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        Branch: "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"({"),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"left"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"right"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"})"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"=>"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," {")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"            "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"return"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," ["),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"payload"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"..."),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"left"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"..."),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"right"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"];")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"        }")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"    }"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"}")),(0,p.kt)("div",{parentName:"code",className:"line"}),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"const"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"["),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d1"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d2"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d3"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d4"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},", "),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d5"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"]"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," "),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"="),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}}," depthFirst"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"binTree"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d1"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(1)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d2"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(2)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d3"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(4)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d4"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(5)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")),(0,p.kt)("div",{parentName:"code",className:"line"},(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},"expect"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"("),(0,p.kt)("span",{parentName:"div",style:{color:"#F56565"}},"d5"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},")"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},".toBe"),(0,p.kt)("span",{parentName:"div",style:{color:"#A8A8B1"}},"(3)"),(0,p.kt)("span",{parentName:"div",style:{color:"#FFFFFF"}},";")))))))}y.isMDXComponent=!0}}]);